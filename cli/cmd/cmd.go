package cmd

import (
	"os"

	"github.com/urfave/cli"

	"github.com/moov-io/xsd2go/pkg/xsd2go"
)

// Execute ...
func Execute() error {
	app := cli.NewApp()
	app.Name = "moov-io XSD2Go"
	app.Usage = "Automatically generate golang xml parser based on XSD"
	app.Commands = []cli.Command{
		convert,
	}

	return app.Run(os.Args)
}

var convert = cli.Command{
	Name:  "convert",
	Usage: "convert XSD to golang code to parse xml files generated by given xsd",
	ArgsUsage: "--xsd-file='XSD-FILE' " +
		"--output-dir='OUTPUT-DIR' " +
		"--output-file='OUTPUT-FILE' " +
		"--go-package='GO-PACKAGE' " +
		"--namespace-prefix='NAMESPACE-PREFIX' ",
	Before: func(c *cli.Context) error {
		return nil
	},
	Action: func(c *cli.Context) error {
		err := xsd2go.Convert(
			c.String("xsd-file"),
			c.String("output-dir"),
			c.String("output-file"),
			c.String("go-package"),
			c.String("namespace-prefix"),
			c.String("template-package"),
		)
		if err != nil {
			return cli.NewExitError(err, 1)
		}
		return nil
	},
	Flags: []cli.Flag{
		cli.StringFlag{
			Name:     "xsd-file",
			Required: true,
			Usage:    "Defines the path of the XSD file to parse. Example: --xsd-file='xsd/sample.xsd'",
		},
		cli.StringFlag{
			Name:     "output-dir",
			Required: true,
			Usage:    "Defines the path where to generate code to. Example: --output-dir='output/'",
		},
		cli.StringFlag{
			Name:     "output-file",
			Required: true,
			Usage:    "Defines the file name to generate code to. Example: --output-file='sample.go'",
		},
		cli.StringFlag{
			Name:     "go-package",
			Required: true,
			Usage:    "Defines the name of the Go Package to generate to. Example: --go-package='sample'",
		},
		cli.StringFlag{
			Name:     "namespace-prefix",
			Required: true,
			Usage:    "Defines the xmlns prefix to use for elements. Example: --namespace-prefix='s'",
		},
		cli.StringFlag{
			Name:     "template-package",
			Required: true,
			Usage:    "Defines where the templates exist in the packaged application. Use \".\" for root-level package. Example: --template-package='rtp'",
		},
	},
}
